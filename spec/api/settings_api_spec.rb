=begin
#Platform API

#An API for the common components of all of Codat's products.  These end points cover creating and managing your companies, data connections, and integrations.  [Read about the building blocks of Codat...](https://docs.codat.io/core-concepts/companies)  [See our OpenAPI spec](https://github.com/codatio/oas) 

The version of the OpenAPI document: 3.0.0
Contact: support@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SettingsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SettingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingsApi' do
    it 'should create an instance of SettingsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SettingsApi)
    end
  end

  # unit tests for create_api_key
  # Create API key
  # Use the *Create API keys* endpoint to generate a new API key for your client.  [API keys](https://docs.codat.io/platform-api#/schemas/apiKeys) are tokens used to control access to the API. Include this token in the &#x60;Authorization&#x60; header parameter when making API calls, following the word \&quot;Basic\&quot; and a space with your API key.  You can [read more](https://docs.codat.io/using-the-api/authentication) about authentication at Codat and managing API keys via the Portal UI or API.  ### Tips and pitfalls  * Your first API key is created for you. Access this key via [Codat&#39;s Portal](https://app.codat.io/developers/api-keys). * If you require multiple API keys, perform multiple calls to the *Create API keys* endpoint.  * The number of API keys is limited to 10. If you have reached the maximum amount of keys, use the *Delete API key* endpoint to delete an unused key first.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateApiKey] :create_api_key 
  # @return [ApiKeyDetails]
  describe 'create_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_api_key
  # Delete API key
  # Use the *Delete API keys* endpoint to delete an existing API key, providing its valid &#x60;id&#x60; as a parameter. Note that this operation is not reversible.  [API keys](https://docs.codat.io/platform-api#/schemas/apiKeys) are tokens used to control access to the API. Include this token in the &#x60;Authorization&#x60; header parameter when making API calls, following the word \&quot;Basic\&quot; and a space with your API key.  You can [read more](https://docs.codat.io/using-the-api/authentication) about authentication at Codat and managing API keys via the Portal UI or API.  ### Tips and pitfalls  * It is possible to delete the last remaining API key. If this happens, a new key can be created via the [API key management page](https://app.codat.io/developers/api-keys) of the Portal. * It is possible to delete the API key used to authenticate the *Delete API key* request.
  # @param api_key_id Unique identifier for api key.
  # @param [Hash] opts the optional parameters
  # @return [ErrorMessage]
  describe 'delete_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_profile
  # Get profile
  # Fetch your Codat profile.
  # @param [Hash] opts the optional parameters
  # @return [Profile]
  describe 'get_profile test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_profile_sync_settings
  # Get sync settings
  # Retrieve the [sync settings](https://docs.codat.io/knowledge-base/advanced-sync-settings) for your client. This includes how often data types should be queued to be updated, and how much history should be fetched.
  # @param [Hash] opts the optional parameters
  # @return [SyncSettings]
  describe 'get_profile_sync_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_api_keys
  # List API keys
  # Use the *List API keys* endpoint to return a list of all API keys that currently exist for your client. This includes keys created via the Portal UI or the *Create API keys* endpoint.  [API keys](https://docs.codat.io/platform-api#/schemas/apiKeys) are tokens used to control access to the API. Include this token in the &#x60;Authorization&#x60; header parameter when making API calls, following the word \&quot;Basic\&quot; and a space with your API key.  You can [read more](https://docs.codat.io/using-the-api/authentication) about authentication at Codat and managing API keys via the Portal UI or API.
  # @param [Hash] opts the optional parameters
  # @return [ApiKeys]
  describe 'list_api_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_profile
  # Update profile
  # Update your Codat profile
  # @param [Hash] opts the optional parameters
  # @option opts [Profile] :profile All fields should be included when updating your profile.
  # @return [Profile]
  describe 'update_profile test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_profile_sync_settings
  # Update all sync settings
  # Update sync settings for all data types.
  # @param [Hash] opts the optional parameters
  # @option opts [] :UNKNOWN_PARAM_NAME Include a &#x60;syncSetting&#x60; object for each data type. &#x60;syncFromWindow&#x60;, &#x60;syncFromUTC&#x60; &amp; &#x60;monthsToSync&#x60; only need to be included if you wish to set a value for them.
  # @return [nil]
  describe 'update_profile_sync_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
