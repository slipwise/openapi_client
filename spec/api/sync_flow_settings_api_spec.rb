=begin
#Sync for Commerce

#The API for Sync for Commerce.   Sync for Commerce automatically replicates and reconciles sales data from a merchantâ€™s source PoS, Payments, and eCommerce systems into their accounting software. This eliminates manual processing by merchants and transforms their ability to run and grow their business.    [Read More...](https://docs.codat.io/commerce/overview)  Not seeing the endpoints you're expecting? We've [reorganized our products](https://docs.codat.io/updates/230901-new-products), and you may be using a [different version of Sync for Commerce](https://docs.codat.io/sync-for-commerce-v1-api#/).

The version of the OpenAPI document: 1.1
Contact: syncforcommerce@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SyncFlowSettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SyncFlowSettingsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SyncFlowSettingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SyncFlowSettingsApi' do
    it 'should create an instance of SyncFlowSettingsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SyncFlowSettingsApi)
    end
  end

  # unit tests for get_config_text_sync_flow
  # Get preferences for text fields
  # Return preferences set for the text fields on sync flow.
  # @param locale Localization identifier for English (US) or French.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Localization>]
  describe 'get_config_text_sync_flow test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_visible_accounts
  # List visible accounts
  # Return accounts which are visible on sync flow.
  # @param client_id Unique identifier for your client in Codat.
  # @param platform_key A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
  # @param [Hash] opts the optional parameters
  # @return [VisibleAccounts]
  describe 'get_visible_accounts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_config_text_sync_flow
  # Update preferences for text fields
  # Set preferences for the text fields on sync flow.
  # @param locale Localization identifier for English (US) or French.
  # @param [Hash] opts the optional parameters
  # @option opts [Hash<String, Localization>] :request_body 
  # @return [Hash<String, Localization>]
  describe 'update_config_text_sync_flow test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_visible_accounts_sync_flow
  # Update visible accounts
  # Update which accounts are visible on sync flow.
  # @param platform_key A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
  # @param [Hash] opts the optional parameters
  # @option opts [VisibleAccounts] :visible_accounts 
  # @return [VisibleAccounts]
  describe 'update_visible_accounts_sync_flow test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
