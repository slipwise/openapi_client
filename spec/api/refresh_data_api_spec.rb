=begin
#Platform API

#An API for the common components of all of Codat's products.  These end points cover creating and managing your companies, data connections, and integrations.  [Read about the building blocks of Codat...](https://docs.codat.io/core-concepts/companies)  [See our OpenAPI spec](https://github.com/codatio/oas) 

The version of the OpenAPI document: 3.0.0
Contact: support@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::RefreshDataApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RefreshDataApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::RefreshDataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RefreshDataApi' do
    it 'should create an instance of RefreshDataApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::RefreshDataApi)
    end
  end

  # unit tests for get_company_data_status
  # Get data status
  # Get the state of each data type for a company
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, DataStatus>]
  describe 'get_company_data_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_pull_operation
  # Get pull operation
  # Retrieve information about a single dataset or pull operation.
  # @param company_id Unique identifier for a company.
  # @param dataset_id Unique identifier for the dataset that completed its sync.
  # @param [Hash] opts the optional parameters
  # @return [PullOperation]
  describe 'get_pull_operation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_pull_operations
  # List pull operations
  # Gets the pull operation history (datasets) for a given company.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. [Read more](https://docs.codat.io/using-the-api/paging).
  # @option opts [Integer] :page_size Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
  # @option opts [String] :query Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
  # @option opts [String] :order_by Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
  # @return [PullOperations]
  describe 'list_pull_operations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for refresh_company_data
  # Refresh all data
  # Refreshes all data types with &#x60;fetch on first link&#x60; set to &#x60;true&#x60; for a given company.  This is an asynchronous operation, and will bring updated data into Codat from the linked integration for you to view.  [Read more](https://docs.codat.io/core-concepts/data-type-settings) about data type settings and &#x60;fetch on first link&#x60;.
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'refresh_company_data test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for refresh_data_type
  # Refresh data type
  # Refreshes a given data type for a given company.  This is an asynchronous operation, and will bring updated data into Codat from the linked integration for you to view.
  # @param company_id Unique identifier for a company.
  # @param data_type The key of a Codat data type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :connection_id Optionally, provide a data connection id to only queue pull operations on that connection.
  # @return [PullOperation]
  describe 'refresh_data_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
