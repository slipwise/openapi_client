=begin
#Platform API

#An API for the common components of all of Codat's products.  These end points cover creating and managing your companies, data connections, and integrations.  [Read about the building blocks of Codat...](https://docs.codat.io/core-concepts/companies)  [See our OpenAPI spec](https://github.com/codatio/oas) 

The version of the OpenAPI document: 3.0.0
Contact: support@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ConnectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConnectionsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ConnectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConnectionsApi' do
    it 'should create an instance of ConnectionsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ConnectionsApi)
    end
  end

  # unit tests for create_connection
  # Create connection
  # ﻿Creates a connection for the company by providing a valid &#x60;platformKey&#x60;.   Use the [List Integrations](https://docs.codat.io/platform-api#/operations/list-integrations) endpoint to access valid platform keys. 
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateConnectionRequest] :create_connection_request 
  # @return [Connection]
  describe 'create_connection test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_connection
  # Delete connection
  # ﻿Revoke and remove a connection from a company. This operation is not reversible. The end user would need to reauthorize a new data connection if you wish to view new data for this company.
  # @param company_id Unique identifier for a company.
  # @param connection_id Unique identifier for a connection.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_connection test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_connection
  # Get connection
  # ﻿Returns a specific connection for a company when valid identifiers are provided. If the identifiers are for a deleted company and/or connection, a not found response is returned.
  # @param company_id Unique identifier for a company.
  # @param connection_id Unique identifier for a connection.
  # @param [Hash] opts the optional parameters
  # @return [Connection]
  describe 'get_connection test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_connections
  # List connections
  # ﻿List the connections for a company.
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. [Read more](https://docs.codat.io/using-the-api/paging).
  # @option opts [Integer] :page_size Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
  # @option opts [String] :query Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
  # @option opts [String] :order_by Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
  # @return [Connections]
  describe 'list_connections test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unlink_connection
  # Unlink connection
  # ﻿This allows you to deauthorize a connection, without deleting it from Codat. This means you can still view any data that has previously been pulled into Codat, and also lets you re-authorize in future if your customer wishes to resume sharing their data.
  # @param company_id Unique identifier for a company.
  # @param connection_id Unique identifier for a connection.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateConnectionStatus] :update_connection_status 
  # @return [Connection]
  describe 'unlink_connection test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_connection_authorization
  # Update authorization
  # Update data connection&#39;s authorization.
  # @param company_id Unique identifier for a company.
  # @param connection_id Unique identifier for a connection.
  # @param [Hash] opts the optional parameters
  # @option opts [Hash<String, String>] :request_body 
  # @return [Connection]
  describe 'update_connection_authorization test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
