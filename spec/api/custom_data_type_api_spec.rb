=begin
#Platform API

#An API for the common components of all of Codat's products.  These end points cover creating and managing your companies, data connections, and integrations.  [Read about the building blocks of Codat...](https://docs.codat.io/core-concepts/companies)  [See our OpenAPI spec](https://github.com/codatio/oas) 

The version of the OpenAPI document: 3.0.0
Contact: support@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CustomDataTypeApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomDataTypeApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CustomDataTypeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomDataTypeApi' do
    it 'should create an instance of CustomDataTypeApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CustomDataTypeApi)
    end
  end

  # unit tests for configure_custom_data_type
  # Configure custom data type
  # The *Configure custom data type* endpoint allows you to maintain or change the configuration required to return a custom data type for a specific integration.   A [custom data type](https://docs.codat.io/using-the-api/custom-data) is an additional data type you can create that is not included in Codat&#39;s standardized data model.  ### Tips and traps  - You can only configure a single custom data type for a single platform at a time. Use the endpoint multiple times if you need to configure it for multiple platforms.   - You can only indicate a single data source for each customer data type.   - Make your custom configuration as similar as possible to our standard data types so you can interact with them in exactly the same way.
  # @param platform_key A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
  # @param custom_data_identifier Unique identifier for a custom data type.
  # @param [Hash] opts the optional parameters
  # @option opts [CustomDataTypeConfiguration] :custom_data_type_configuration Custom data type configuration for the specified platform.
  # @return [CustomDataTypeConfiguration]
  describe 'configure_custom_data_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_custom_data_type_configuration
  # Get custom data configuration
  # The *Get custom data configuration* endpoint returns existing configuration details for the specified custom data type and integration pair you previously configured.  A [custom data type](https://docs.codat.io/using-the-api/custom-data) is an additional data type you can create that is not included in Codat&#39;s standardized data model.
  # @param platform_key A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
  # @param custom_data_identifier Unique identifier for a custom data type.
  # @param [Hash] opts the optional parameters
  # @return [CustomDataTypeRecords]
  describe 'get_custom_data_type_configuration test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_custom_data_type_records
  # List custom data type records
  # The *List custom data type records* endpoint returns a paginated list of records pulled for the specified custom data type you previously configured.  A [custom data type](https://docs.codat.io/using-the-api/custom-data) is an additional data type you can create that is not included in Codat&#39;s standardized data model.s endpoint returns a paginated list of records whose schema is defined [Configure custom data type](https://docs.codat.io/platform-api#/operations/configure-custom-data-type)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. [Read more](https://docs.codat.io/using-the-api/paging).
  # @option opts [Integer] :page_size Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
  # @return [CustomDataTypeRecords]
  describe 'list_custom_data_type_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for refresh_custom_data_type
  # Refresh custom data type
  # The *Refresh custom data type* endpoint refreshes the specified custom data type for a given company. This is an asynchronous operation that will sync updated data from the linked integration into Codat for you to view.
  # @param company_id Unique identifier for a company.
  # @param connection_id Unique identifier for a connection.
  # @param custom_data_identifier Unique identifier for a custom data type.
  # @param [Hash] opts the optional parameters
  # @return [PullOperation]
  describe 'refresh_custom_data_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
