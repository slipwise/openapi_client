=begin
#Sync for Commerce

#The API for Sync for Commerce.   Sync for Commerce automatically replicates and reconciles sales data from a merchantâ€™s source PoS, Payments, and eCommerce systems into their accounting software. This eliminates manual processing by merchants and transforms their ability to run and grow their business.    [Read More...](https://docs.codat.io/commerce/overview)  Not seeing the endpoints you're expecting? We've [reorganized our products](https://docs.codat.io/updates/230901-new-products), and you may be using a [different version of Sync for Commerce](https://docs.codat.io/sync-for-commerce-v1-api#/).

The version of the OpenAPI document: 1.1
Contact: syncforcommerce@codat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SyncApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SyncApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SyncApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SyncApi' do
    it 'should create an instance of SyncApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SyncApi)
    end
  end

  # unit tests for get_last_successful_sync
  # Last successful sync
  # Gets the status of the last successful sync
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [CompanySyncStatus]
  describe 'get_last_successful_sync test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_latest_sync
  # Latest sync status
  # Gets the latest sync status
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [CompanySyncStatus]
  describe 'get_latest_sync test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sync_by_id
  # Get sync status
  # Get the sync status for a specified sync
  # @param company_id Unique identifier for a company.
  # @param sync_id Unique identifier for a sync.
  # @param [Hash] opts the optional parameters
  # @return [CompanySyncStatus]
  describe 'get_sync_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sync_status
  # Get sync status
  # Gets a list of sync statuses.
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [SyncStatus]
  describe 'get_sync_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_syncs
  # List sync statuses
  # Gets a list of sync statuses
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @return [Array<CompanySyncStatus>]
  describe 'list_syncs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for request_sync
  # Initiate new sync
  # Run a Commerce sync from the last successful sync up to the date provided (optional), otherwise UtcNow is used.\\r\\nIf there was no previously successful sync, the start date in the config is used.
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @option opts [SyncToLatestArgs] :sync_to_latest_args 
  # @return [SyncSummary]
  describe 'request_sync test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for request_sync_for_date_range
  # Initiate sync for specific range
  # Initiate a sync for the specified start date to the specified finish date in the request payload.
  # @param company_id Unique identifier for a company.
  # @param [Hash] opts the optional parameters
  # @option opts [SyncRange] :sync_range 
  # @return [SyncSummary]
  describe 'request_sync_for_date_range test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
